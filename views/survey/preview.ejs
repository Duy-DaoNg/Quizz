<!DOCTYPE html>
<html lang="<%= lng %>">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %> - <%= t('common:app_name') %></title>
    
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&display=swap" rel="stylesheet">
    
    <!-- Font Awesome -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    
    <!-- Custom CSS -->
    <link href="/css/modern_quiz_form.css" rel="stylesheet">
    <link href="/css/quiz_preview.css" rel="stylesheet">
    
    <!-- SweetAlert2 -->
    <link href="https://cdn.jsdelivr.net/npm/@sweetalert2/theme-bootstrap-4/bootstrap-4.css" rel="stylesheet">
    
    <style>
        :root {
            --primary-color: #667eea;
            --secondary-color: #764ba2;
            --success-color: #10b981;
            --warning-color: #f59e0b;
            --danger-color: #ef4444;
            --info-color: #3b82f6;
            --dark-color: #1e293b;
            --light-color: #f8fafc;
            --border-radius: 16px;
            --border-radius-lg: 20px;
            --border-radius-sm: 8px;
            --shadow-sm: 0 4px 6px rgba(0, 0, 0, 0.05);
            --shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
            --shadow-lg: 0 25px 50px rgba(0, 0, 0, 0.15);
            --transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            --transition-fast: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
        }   
        .test-header {
            background: linear-gradient(135deg, var(--primary-color) 0%, var(--secondary-color) 100%);
            color: white;
            padding: 1rem;
            border-radius: 12px;
            margin-bottom: 1.5rem;
            position: relative;
            overflow: hidden;
        }

        .test-header::before {
            content: '';
            position: absolute;
            top: 0;
            right: 0;
            width: 200px;
            height: 200px;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 50%;
            transform: translate(25%, -25%);
        }
        @keyframes slideDown {
            from {
                opacity: 0;
                transform: translateX(-50%) translateY(-20px);
            }
            to {
                opacity: 1;
                transform: translateX(-50%) translateY(0);
            }
        }

        .test-info {
            position: relative;
            z-index: 2;
        }

        .participant-score {
            background: rgba(255, 255, 255, 0.2);
            border-radius: 12px;
            padding: 1rem;
            text-align: center;
            margin-bottom: 1rem;
        }

        .score-value {
            font-size: 2rem;
            font-weight: 800;
            color: white;
            display: block;
        }

        .score-label {
            font-size: 0.875rem;
            opacity: 0.9;
        }

        .waiting-room {
            text-align: center;
            padding: 3rem 2rem;
        }

        .waiting-icon {
            font-size: 4rem;
            color: var(--primary-color);
            margin-bottom: 2rem;
            animation: pulse 2s infinite;
        }

        @keyframes pulse {
            0%, 100% { transform: scale(1); }
            50% { transform: scale(1.1); }
        }

        .participants-list {
            max-height: 300px;
            overflow-y: auto;
            border-radius: 12px;
            border: 1px solid #e2e8f0;
            padding: 1rem;
        }

        .participant-item {
            display: flex;
            align-items: center;
            padding: 0.75rem;
            border-radius: 8px;
            margin-bottom: 0.5rem;
            background: #f8fafc;
            border: 1px solid #e2e8f0;
        }

        .participant-avatar {
            width: 32px;
            height: 32px;
            border-radius: 50%;
            background: var(--primary-color);
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: 600;
            margin-right: 0.75rem;
        }

        .preview-option.submitted {
            border: 3px solid #10b981;
            background: linear-gradient(135deg, #ecfdf5 0%, #d1fae5 100%);
            transform: scale(1.02);
            box-shadow: 0 8px 25px rgba(16, 185, 129, 0.3);
        }
        .preview-option.pulse-selection {
            animation: pulseSelection 0.6s ease-in-out;
        }
        @keyframes pulseSelection {
            0% { transform: scale(1); }
            50% { transform: scale(1.05); }
            100% { transform: scale(1.02); }
        }

        /* Responsive design */
        @media (max-width: 768px) {
            .test-header {
                padding: 1rem;
            }
        }@keyframes pulseSelection {
            0% { transform: scale(1); }
            50% { transform: scale(1.05); }
            100% { transform: scale(1.02); }
        }

        /* Styling cho trạng thái disabled sau khi submit */
        .preview-option.disabled {
            pointer-events: none;
            opacity: 0.6;
            filter: grayscale(0.3);
        }

        /* Override cho option đã submit để vẫn hiển thị rõ */
        .preview-option.submitted.disabled {
            opacity: 1 !important;
            filter: none !important;
        }

        /* Styling cho submission notification */
        #submissionNotification {
            border-radius: 12px;
            border: 2px solid #10b981;
            font-weight: 600;
            box-shadow: 0 10px 30px rgba(16, 185, 129, 0.3);
            backdrop-filter: blur(10px);
            background: rgba(255, 255, 255, 0.95) !important;
        }

        #submissionNotification.alert-success {
            color: #059669;
            border-color: #10b981;
        }

        #submissionNotification.alert-warning {
            color: #d97706;
            border-color: #f59e0b;
            background: rgba(254, 252, 232, 0.95) !important;
        }

        /* Icon status trong option */
        .preview-option-status {
            position: absolute;
            top: 10px;
            right: 10px;
            font-size: 1.2rem;
        }

        /* Responsive design cho notification */
        @media (max-width: 576px) {
            #submissionNotification {
                min-width: 280px;
                left: 10px;
                right: 10px;
                transform: none;
                top: 80px;
            }
        }

        /* Loading state cho options khi đang submit */
        .preview-option.submitting {
            position: relative;
            pointer-events: none;
        }

        .preview-option.submitting::after {
            content: '';
            position: absolute;
            top: 50%;
            right: 15px;
            transform: translateY(-50%);
            width: 16px;
            height: 16px;
            border: 2px solid #10b981;
            border-top: 2px solid transparent;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            0% { transform: translateY(-50%) rotate(0deg); }
            100% { transform: translateY(-50%) rotate(360deg); }
        }

        /* Success checkmark animation */
        .preview-option-status .fa-check {
            animation: checkmarkPop 0.5s ease-out;
        }

        @keyframes checkmarkPop {
            0% { 
                transform: scale(0);
                opacity: 0;
            }
            50% { 
                transform: scale(1.2);
                opacity: 1;
            }
            100% { 
                transform: scale(1);
                opacity: 1;
            }
        }

        /* Timer warning states */
        .timer-circle.submitted {
            border-color: #10b981 !important;
        }

        .timer-circle.submitted .timer-text {
            color: #10b981 !important;
        }

        /* Waiting state styling */
        .waiting-for-others {
            background: linear-gradient(135deg, #f0f9ff 0%, #e0f2fe 100%);
            border: 2px solid #0ea5e9;
            color: #0369a1;
            padding: 1rem;
            border-radius: 12px;
            text-align: center;
            margin-top: 1rem;
            font-weight: 600;
        }

        .waiting-for-others .spinner-border {
            width: 1.2rem;
            height: 1.2rem;
            margin-right: 0.5rem;
        }

        /* Hide question content partially after submission */
        .question-submitted .preview-question-content {
            opacity: 0.8;
        }

        .question-submitted .preview-options {
            pointer-events: none;
        }

        .question-submitted .preview-options .preview-option:not(.submitted) {
            opacity: 0.5;
            filter: grayscale(0.5);
        }

        /* Smooth transitions */
        .preview-option {
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        }

        .preview-option:hover:not(.disabled):not(.submitted) {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
        }

        /* Auto-advance notice */
        .auto-advance-notice {
            background: linear-gradient(135deg, #fef3c7 0%, #fde68a 100%);
            border: 1px solid #f59e0b;
            border-radius: 12px;
            padding: 1rem;
            margin-bottom: 1.5rem;
            text-align: center;
        }

        .auto-advance-timer {
            font-size: 1.5rem;
            font-weight: 700;
            color: var(--warning-color);
            margin-top: 0.5rem;
        }

        /* Completion summary */
        .completion-summary {
            background: white;
            border-radius: 12px;
            padding: 2rem;
            box-shadow: var(--shadow);
            text-align: center;
            margin-top: 2rem;
        }

        .completion-icon {
            font-size: 4rem;
            color: var(--success-color);
            margin-bottom: 1rem;
        }

        .btn-finish-test {
            background: linear-gradient(135deg, var(--success-color) 0%, #059669 100%);
            border: none;
            border-radius: 12px;
            padding: 1rem 2rem;
            font-size: 1.1rem;
            font-weight: 600;
            color: white;
            margin-top: 1rem;
            transition: var(--transition);
        }

        .btn-finish-test:hover {
            background: linear-gradient(135deg, #059669 0%, #047857 100%);
            transform: translateY(-2px);
            color: white;
        }

        /* Language switcher positioning */
        .language-switcher-container {
            position: absolute;
            top: 10px;
            right: 10px;
            z-index: 1000;
        }

        /* Responsive design for language switcher */
        @media (max-width: 768px) {
            .language-switcher-container {
                top: 5px;
                right: 5px;
            }
        }

        /* Sidebar styles */
        .quiz-sidebar {
            position: fixed;
            right: 0;
            top: 0;
            width: 280px;
            height: 100vh;
            background: white;
            border-left: 1px solid #e2e8f0;
            padding: 1rem;
            overflow-y: auto;
            box-shadow: -5px 0 15px rgba(0,0,0,0.05);
        }

        .quiz-timer-large {
            background: linear-gradient(135deg, var(--primary-color) 0%, var(--secondary-color) 100%);
            color: white;
            padding: 1.5rem;
            border-radius: 12px;
            text-align: center;
            margin-bottom: 1rem;
        }

        .quiz-timer-large .timer-text {
            font-size: 2rem;
            font-weight: 700;
        }

        .question-nav {
            display: grid;
            grid-template-columns: repeat(5, 1fr);
            gap: 0.5rem;
            margin-bottom: 1rem;
        }

        .question-nav-item {
            aspect-ratio: 1;
            display: flex;
            align-items: center;
            justify-content: center;
            background: #f8fafc;
            border: 1px solid #e2e8f0;
            border-radius: 8px;
            cursor: pointer;
            font-weight: 600;
            transition: all 0.2s;
        }

        .question-nav-item:hover {
            background: #f1f5f9;
            transform: translateY(-2px);
        }

        .question-nav-item.current {
            background: var(--primary-color);
            color: white;
            border-color: var(--primary-color);
        }

        .question-nav-item.answered {
            background: var(--success-color);
            color: white;
            border-color: var(--success-color);
        }

        .submit-test-btn {
            display: block;
            width: 100%;
            padding: 1rem;
            background: var(--danger-color);
            color: white;
            border: none;
            border-radius: 12px;
            font-weight: 600;
            margin-top: 1rem;
            transition: all 0.2s;
        }

        .submit-test-btn:hover {
            background: #dc2626;
            transform: translateY(-2px);
        }

        /* Adjust main content to make room for sidebar */
        .quiz-preview-container {
            margin-right: 280px;
        }

        @media (max-width: 768px) {
            .quiz-sidebar {
                display: none;
            }
            .quiz-preview-container {
                margin-right: 0;
            }
        }
        .answer-textarea {
            background: rgba(255, 255, 255, 0.95);
            border: 2px solid #e2e8f0;
            border-radius: var(--border-radius);
            transition: var(--transition);
            font-size: 0.95rem;
            resize: vertical;
            min-height: 120px;
        }

        .answer-textarea:focus {
            border-color: var(--primary-color);
            box-shadow: 0 0 0 4px rgba(102, 126, 234, 0.1);
            background: white;
        }

        .form-floating > .answer-textarea {
            padding: 1rem;
        }

        .form-floating > label {
            padding: 1rem;
            color: #64748b;
        }

        .answer-input-container {
            background: rgba(255, 255, 255, 0.5);
            border-radius: var(--border-radius);
            padding: 1rem;
            margin-top: 1.5rem;
        }

        /* Responsive adjustments */
        @media (max-width: 768px) {
            .answer-textarea {
                min-height: 100px;
            }
            
            .form-floating > .answer-textarea {
                padding: 0.75rem;
            }
            
            .form-floating > label {
                padding: 0.75rem;
            }
        }

        .quiz-sidebar {
            position: fixed;
            right: 0;
            top: 0;
            width: 280px;
            height: 100vh;
            background: white;
            border-left: 1px solid #e2e8f0;
            padding: 1rem;
            overflow-y: auto;
            box-shadow: -5px 0 15px rgba(0,0,0,0.05);
            transition: all 0.3s ease;
            z-index: 1000;
        }

        /* Bottom bar styles for mobile */
        @media (max-width: 768px) {
            .quiz-sidebar {
                width: 100%;
                height: auto;
                bottom: 0;
                top: auto;
                right: 0;
                left: 0;
                border-left: none;
                border-top: 1px solid #e2e8f0;
                box-shadow: 0 -5px 15px rgba(0,0,0,0.05);
                padding: 0.75rem;
                display: flex;
                align-items: center;
                gap: 1rem;
                overflow-x: auto;
            }

            /* Adjust quiz container padding for bottom bar */
            .quiz-preview-container {
                margin-right: 0;
                padding-bottom: 160px !important; /* Add space for bottom bar */
            }

            /* Reorganize bottom bar content */
            .quiz-timer-large {
                margin: 0;
                padding: 0.5rem;
                flex-shrink: 0;
                min-width: 120px;
            }

            .quiz-timer-large .timer-text {
                font-size: 1.2rem;
            }

            .question-nav {
                margin: 0;
                display: flex;
                gap: 0.25rem;
                flex-wrap: nowrap;
                overflow-x: auto;
                padding-bottom: 0.5rem;
                -webkit-overflow-scrolling: touch;
                flex: 1;
            }

            .question-nav-item {
                min-width: 40px;
                height: 40px;
                flex-shrink: 0;
            }

            /* Adjust submit button */
            .submit-test-btn {
                margin: 0;
                padding: 0.5rem 1rem;
                flex-shrink: 0;
                width: auto;
                white-space: nowrap;
            }

            /* Hide heading in mobile */
            .quiz-sidebar h6 {
                display: none;
            }

            /* Scrollbar styling for question nav */
            .question-nav::-webkit-scrollbar {
                height: 3px;
            }

            .question-nav::-webkit-scrollbar-track {
                background: #f1f1f1;
            }

            .question-nav::-webkit-scrollbar-thumb {
                background: #888;
                border-radius: 3px;
            }

            /* Small screens adjustments */
            @media (max-width: 480px) {
                .quiz-timer-large .timer-text {
                    font-size: 1rem;
                }

                .question-nav-item {
                    min-width: 35px;
                    height: 35px;
                    font-size: 0.8rem;
                }

                .submit-test-btn {
                    padding: 0.5rem;
                    font-size: 0.8rem;
                }

                .quiz-timer-large {
                    min-width: 100px;
                }
            }
        }



    </style>
</head>
<body>
    <div class="container-fluid quiz-preview-container" style="padding: 10px;">
        <div class="row justify-content-center">
            <div class="col-12 col-lg-10 col-xl-8">
                <!-- Test Header -->
                <div class="test-header">
                    <div class="test-info">
                        <div class="row align-items-center">
                            <div class="col-md-8">
                                <h1 class="h3 mb-1">
                                    <i class="fas fa-clock me-2"></i>
                                    <%= quiz.title %>
                                </h1>
                                <p class="mb-0 opacity-75">
                                    <%= t('publicsurvey:publicsurvey_code') %>: xxxxx</strong> | 
                                    <%= t('publicsurvey:quiz_number') %> #<%= quiz.quizNumber %> | 
                                    <%= quiz.questions.length %> <%= t('survey:questions') %>
                                </p>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-12 text-lg-start">
                        <div class="header-actions" style="margin-top: 20px;">
                            <a href="/surveys" class="btn btn-outline-light me-2">
                                <i class="fas fa-arrow-left me-2"></i>
                                <%= t('survey:back_to_dashboard') %>
                            </a>
                        </div>
                    </div>
                </div>
                <!-- Auto-advance Notice (hidden initially) -->
                <div id="autoAdvanceNotice" class="auto-advance-notice" style="display: none;">
                    <div>
                        <i class="fas fa-info-circle me-2"></i>
                        <strong><%= t('publicsurvey:auto_advance') || 'Time\'s up!' %></strong> <%= t('publicsurvey:moving_to_next') || 'Moving to next question automatically...' %>
                    </div>
                    <div class="auto-advance-timer" id="autoAdvanceTimer">3</div>
                </div>

                <!-- Quiz Content -->
                <div id="quizContent">
                    <!-- Question Display Container -->
                    <div id="previewQuestionContainer">
                        <!-- Questions will be populated by JavaScript -->
                    </div>
                </div>

                <!-- Completion Summary (hidden initially) -->
                <div id="completionSummary" class="completion-summary" style="display: none;">
                    <div class="completion-icon">
                        <i class="fas fa-trophy"></i>
                    </div>
                    <h3><%= t('publicsurvey:publicsurvey_completed_desc') %></h3>
                    <p class="lead mb-3"><%= t('publicsurvey:thank_you') %></p>
                </div>
            </div>
        </div>
    </div>

    <!-- Hidden Data -->
    <script id="quiz-data" type="application/json">
        <%- JSON.stringify({
            participantName: "Nguyễn Văn A",
            participantId: "123",
            quiz: {
                title: quiz.title,
                questions: quiz.questions.map((q, i) => ({
                    id: i,
                    content: q.content,
                    options: q.options,
                    correctAnswer: q.correctAnswer,
                    answerTime: q.answerTime || 30,
                    image: q.image
                })),
                testDuration: quiz.testDuration
            },
        }) %>
    </script>

    <!-- Translation object for JavaScript -->
    <script>
        window.translations = {
            lng: '<%= lng %>',
            // Test translations
            publicsurveyCode: '<%= t("publicsurvey:publicsurvey_code") %>',
            quizTitle: '<%= t("publicsurvey:quiz_title") %>',
            questions: '<%= t("quiz:questions") %>',
            yourScore: '<%= t("publicsurvey:your_score") %>',
            publicsurveyCompleted: '<%= t("publicsurvey:publicsurvey_completed") %>',
            thankYou: '<%= t("publicsurvey:thank_you") %>',
            viewResults: '<%= t("publicsurvey:view_results") %>',
            finalScore: '<%= t("publicsurvey:final_score") || "Final Score" %>',
            correctAnswers: '<%= t("publicsurvey:correct_answers") %>',
            totalTime: '<%= t("publicsurvey:total_time") || "Total Time" %>',
            
            // Answer feedback
            correct: '<%= t("publicsurvey:correct") %>',
            incorrect: '<%= t("publicsurvey:incorrect") %>',
            score: '<%= t("publicsurvey:score") %>',
            
            // Submission messages
            answerSubmitted: '<%= t("publicsurvey:answer_submitted") %>',
            waitingForOthers: '<%= t("publicsurvey:waiting_for_others") %>',
            processing: '<%= t("publicsurvey:processing") || "Processing..." %>',
            
            // Timer and auto-advance
            timeUp: '<%= t("publicsurvey:time_up") || "Time\'s up!" %>',
            movingToNext: '<%= t("publicsurvey:moving_to_next") || "Moving to next question automatically..." %>',
            autoAdvance: '<%= t("publicsurvey:auto_advance") || "Auto advancing" %>',
            
            // Navigation
            question: '<%= t("publicsurvey:question") %>',
            nextQuestion: '<%= t("publicsurvey:next_question") %>',
            finishpublicsurvey: '<%= t("publicsurvey:finish_publicsurvey") %>',
            
            // Common
            loading: '<%= t("common:loading") %>',
            error: '<%= t("common:error") %>',
            success: '<%= t("common:success") %>',
            
            // Completion
            greatJob: '<%= t("publicsurvey:great_job") || "Great job!" %>',
            finishedpublicsurvey: '<%= t("publicsurvey:finished_publicsurvey") || "You\'ve finished the survey." %>',
            detailedResults: '<%= t("publicsurvey:detailed_results") || "View Detailed Results" %>',

            // Subbmit
            confirmSubmit: '<%= t("publicsurvey:confirm_submit") %>',
            confirmSubmitMessage: '<%= t("publicsurvey:confirm_submit_message") %>',
            submit: '<%= t("common:submit") %>',
            cancel: '<%= t("common:cancel") %>',
            enterAnswer: '<%= t("publicsurvey:enter_answer") || "Enter your answer here..." %>',
            yourAnswer: '<%= t("publicsurvey:your_answer") || "Your answer" %>',
            noAnswers: '<%= t("publicsurvey:no_answers") || "Please answer at least one question before submitting." %>'
        };
    </script>

    <!-- Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <!-- <script src="/js/quiz_preview.js"></script> -->
    
    <script>
        // Offline Quiz Logic with multilingual support
        let quizData;
        let currentQuestionIndex = 0;
        let currentScore = 0;
        let questionTimer = null;
        let answers = [];
        let startTime = Date.now();
        let isAnswering = false;
        let autoAdvanceTimer = null;
        let hasSubmittedAnswer = false;
        let selectedTimeRemaining = 0;
        let isSubmitedTest = false;
        let testTimer = null;
        let testTimeRemaining = 0;

        document.addEventListener('DOMContentLoaded', function() {
            quizData = JSON.parse(document.getElementById('quiz-data').textContent);
            // Set up test duration timer
            testTimeRemaining = (quizData.quiz.testDuration || 30) * 60; // Convert minutes to seconds
            startTestTimer();
            // Start with first question
            showQuestion();
        });

        function startTestTimer() {
            updateTestTimerDisplay();
            testTimer = setInterval(() => {
                testTimeRemaining--;
                updateTestTimerDisplay();
                
                if (testTimeRemaining <= 0) {
                    clearInterval(testTimer);
                    completeTest();
                }
            }, 1000);
        }
        async function completeTest() {
            if (isSubmitedTest) return; // Prevent multiple submissions

            if (answers.length === 0) {
                Swal.fire({
                    title: window.translations.error || 'Error',
                    text: window.translations.noAnswers || 'Please answer at least one question before submitting.',
                    icon: 'warning',
                    confirmButtonText: 'OK'
                });
                return;
            }

            isSubmitedTest = true;
            clearInterval(testTimer);

            try {

                document.querySelector('.quiz-sidebar').style.display = 'none';
                // Hide quiz content and show completion summary
                document.getElementById('quizContent').style.display = 'none';
                document.getElementById('completionSummary').style.display = 'block';
                
                // Show completion message
                Swal.fire({
                    title: window.translations.testCompleted || 'Test Completed',
                    text: window.translations.thankYou || 'Thank you for completing the test!',
                    icon: 'success',
                    confirmButtonText: window.translations.viewResults || 'View Results'
                });

            } catch (error) {
                console.error('Complete test error:', error);
                isSubmitedTest = false; // Allow retry
                Swal.fire({
                    title: 'Error',
                    text: error.message || 'Failed to submit test',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            }
        }
        function formatTime(totalSeconds) {
            const hours = Math.floor(totalSeconds / 3600);
            const minutes = Math.floor((totalSeconds % 3600) / 60);
            const seconds = totalSeconds % 60;
            
            return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;
        }
        function updateTestTimerDisplay() {
            const hours = Math.floor(testTimeRemaining / 3600);
            const minutes = Math.floor((testTimeRemaining % 3600) / 60);
            const seconds = testTimeRemaining % 60;
            
            document.getElementById('testTimerHours').textContent = hours.toString().padStart(2, '0');
            document.getElementById('testTimerMinutes').textContent = minutes.toString().padStart(2, '0');
            document.getElementById('testTimerSeconds').textContent = seconds.toString().padStart(2, '0');
        }

        function confirmSubmitTest() {
            Swal.fire({
                title: window.translations.confirmSubmit || 'Submit Survey?',
                text: window.translations.confirmSubmitMessage || 'Are you sure you want to submit your survey? This action cannot be undone.',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#ef4444',
                cancelButtonColor: '#6b7280',
                confirmButtonText: window.translations.submit || 'Submit',
                cancelButtonText: window.translations.cancel || 'Cancel'
            }).then((result) => {
                if (result.isConfirmed) {
                    completeTest();
                }
            });
        }

        // Update existing functions
        function showQuestion() {
            const container = document.getElementById('previewQuestionContainer');
            let displayQuestion = "";
            quizData.quiz.questions.forEach((question,index) => {
                let questionHTML = `<div>
                <div class="question-display-container">
                    <div class="preview-question-header">
                        <div class="preview-question-number">${index + 1}</div>
                        <div class="preview-question-content">
                            <h5 class="preview-question-title">${question.content}</h5>
                        </div>
                    </div>
                `;
            
            if (question.image) {
                questionHTML += `
                    <div class="preview-question-image">
                        <img src="${question.image}" alt="Question Image">
                    </div>
                `;
            }
            
            questionHTML += `
                <div class="answer-input-container mt-4">
                    <div class="form-floating">
                        <textarea 
                            class="form-control answer-textarea" 
                            id="answer-${index}"
                            placeholder="${window.translations.enterAnswer || 'Enter your answer here...'}"
                            style="height: 120px"
                            onchange="handleAnswerChange(${index}, this.value)"
                        ></textarea>
                        <label for="answer-${index}">${window.translations.yourAnswer || 'Your answer'}</label>
                    </div>
                </div>
            </div>`;
            displayQuestion += questionHTML;
        });

        container.innerHTML = displayQuestion;
    }
    function handleAnswerChange(questionNumber, answerText) {
        const existingAnswerIndex = answers.findIndex(a => a.questionNumber === questionNumber);
        
        if (existingAnswerIndex !== -1) {
            // Nếu đã có câu trả lời, cập nhật nó
            answers[existingAnswerIndex].answer = answerText;
        } else {
            // Nếu chưa có, thêm câu trả lời mới
            answers.push({
                questionNumber: questionNumber,
                answer: answerText
            });
        }
    }
    </script>
    <div class="quiz-sidebar">
        <div class="quiz-timer-large">
            <div class="small mb-1"><%= t('publicsurvey:time_remaining') %></div>
            <div class="timer-text">
                <span id="testTimerHours">00</span>:<span id="testTimerMinutes">00</span>:<span id="testTimerSeconds">00</span>
            </div>
        </div>
        
        <h6 class="mb-3"><%= t('publicsurvey:questions_list') %></h6>
        <div class="question-nav" id="questionNav">
            <!-- Questions nav will be populated by JavaScript -->
        </div>

        <button class="submit-test-btn" onclick="confirmSubmitTest()" style="background: linear-gradient(135deg, #64748b, #475569);">
            <i class="fas fa-paper-plane me-2"></i>
            <%= t('publicsurvey:submit_publicsurvey') %>
        </button>
    </div>
</body>
</html>